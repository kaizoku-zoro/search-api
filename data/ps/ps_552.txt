Chef has NN dishes of different types arranged in a row: A1,A2,…,ANA1,A2,…,AN, where AiAi denotes the type of the ithith dish. He wants to choose as many dishes as possible from the given list but while satisfying two conditions: 

He can choose only one type of dish.   
No two chosen dishes should be adjacent to each other. 

Chef wants to know which type of dish he should choose from, so that he can pick the maximum number of dishes.
Example:
Given NN=99 and AA=[1,2,2,1,2,1,1,1,1][1,2,2,1,2,1,1,1,1].
For type 1, Chef can choose at most four dishes. One of the ways to choose four dishes of type 1 is A1A1, A4A4, A7A7 and A9A9.
For type 2, Chef can choose at most two dishes. One way is to choose A3A3 and A5A5.
So in this case, Chef should go for type 1, in which he can pick more dishes.
Input:

The first line contains TT, the number of test cases. Then the test cases follow.
For each test case, the first line contains a single integer NN.
The second line contains NN integers A1,A2,…,ANA1,A2,…,AN. 

Output:
For each test case, print a single line containing one integer ― the type of the dish that Chef should choose from. If there are multiple answers, print the smallest one.
Constraints

1≤T≤1031≤T≤103
1≤N≤1031≤N≤103
1≤Ai≤1031≤Ai≤103
Sum of NN over all test cases doesn't exceed 104104


                        Sample Input 1
                        





3
5
1 2 2 1 2
6
1 1 1 1 1 1
8
1 2 2 2 3 4 2 1



                        Sample Output 1
                        





1
1
2


Explanation
Test case 1:
For both type 1 and type 2, Chef can pick at most two dishes. In the case of multiple answers, we pick the smallest one. Hence the answer will be 11.
Test case 2:
There are only dishes of type 1. So the answer is 11.
Test case 3:
For type 1, Chef can choose at most two dishes. For type 2, he can choose three dishes. For type 3 and type 4, Chef can choose the only dish available. Hence the maximum is in type 2 and so the answer is 22.



Author:
5★rishup_nitdgp


Editorial:
https://discuss.codechef.com/problems/RECNDNOS


Tags:

               
                 Greedy, Observation, Brute Force
                 
                     
                     Algorithms
                 
               
             
             



                        Difficulty Rating:
                    

1396


Date Added:
21-04-2020


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

