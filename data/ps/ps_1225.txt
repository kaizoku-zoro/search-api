A circular array of length NN is defined as follows: NN integers A1,A2,…,ANA1,A2,…,AN are placed in a circle in such a way that for each 1≤i<N1≤i<N, AiAi and Ai+1Ai+1 are adjacent, and A1A1 and ANAN are also adjacent.
You are given a circular array AA of length NN. At the end of each second, the following changes are executed in the array: If Ai>0Ai>0 then the elements which are adjacent to AiAi, will get incremented by 11, for all 1≤i≤N1≤i≤N.
For example, consider the array A=[0,0,0,2,0,0,0,5]A=[0,0,0,2,0,0,0,5]. 

Initially A4A4 and A8A8 are greater than zero. So after one second, A3A3, A5A5, A1A1 and A7A7 will get incremented by 11. Hence the array will become A=[1,0,1,2,1,0,1,5]A=[1,0,1,2,1,0,1,5].
After two seconds, the array becomes A=[2,2,2,4,2,2,2,7]A=[2,2,2,4,2,2,2,7]. Note that the value of A4A4 has become 44, because both, A3A3 and A5A5 were greater than zero after one second.

What will be the sum of elements present in the array AA after KK seconds?
Input Format

The first line will contain TT, number of testcases. Then TT testcases follow.
The first line of each testcase contains 2 space separated integers NN and KK.
The second line of each testcase line contains NN integers A1,A2,…,ANA1,A2,…,AN. 

Output Format
For each testcase, output in a single line containing the sum of the all the elements present in the array AA after KK seconds.
Constraints

1≤T≤1041≤T≤104
3≤N≤1053≤N≤105
0≤Ai≤1060≤Ai≤106
0≤K≤1090≤K≤109
Sum of NN over all test cases does not exceed 106106.


                        Sample Input 1
                        





4
6 1
0 1 0 1 0 0
3 0
0 1 2
8 2
0 0 0 2 0 0 0 5
3 10
1 2 3



                        Sample Output 1
                        





6
3
23
66


Explanation
Test Case 1: After one second, the array will become A=[1,1,2,1,1,0]A=[1,1,2,1,1,0]. So the sum of elements present in the array is = 1+1+2+1+1+0=61+1+2+1+1+0=6.
Test Case 2: No change will be executed in the array as K=0K=0. So the required sum will be equal to 3.



Author:
5★soumyadeep_21


Editorial:
https://discuss.codechef.com/problems/POSSPEW


Tags:

               
                 Dynamic Programming, ad-hoc
                 
                     
                     Algorithms, Constructive
                 
               
             
             



                        Difficulty Rating:
                    

1892


Date Added:
28-07-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

