Read problems statements in Hindi, Mandarin Chinese, Russian, Vietnamese, and Bengali as well.
You are given a grid with RR rows (numbered 11 through RR) and CC columns (numbered 11 through CC). Initially, each cell of this grid is either empty, contains an ant or an anteater. Each ant is moving in a fixed direction: up, down, left or right. The anteaters do not move.
The movement of ants happens in discrete steps. For example, when an ant is in the cell in the ii-th row and jj-th column at some point in time (in some step) and it is moving down, then in the next step, it enters the cell in the (i+1)(i+1)-th row and jj-th column. Two ants meet each other when they enter the same cell at the same point in time (in the same step). When ants meet, they do not interact in any way and keep moving in their fixed directions.
If an ant reaches an anteater, that anteater eats the ant, so the ant completely disappears. If an ant attempts to leave the grid, it also disappears. When two ants enter a cell containing an anteater at the same time, they are eaten before they could meet.
Calculate the total number of pairs of ants that meet each other.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains two space-separated integers RR and CC.
Each of the following RR lines contains a single string with length CC. For each valid i,ji,j, the jj-th character in the ii-th string is:
'#' if the cell in the ii-th row and jj-th column of the grid contains an anteater
'U', 'D', 'L' or 'R' if this cell contains an ant moving up, down, left or right respectively
'-' if this cell is empty

Output
For each test case, print a single line containing one integer — the number of pairs of ants that meet.
Constraints

1≤T≤101≤T≤10
1≤R,C≤501≤R,C≤50
each string contains only characters 'U', 'D', 'L', 'R', '#' and '-'


                        Sample Input 1
                        





10
3 3
R--
---
--U
1 4
R--R
2 2
--
--
1 4
R--L
1 4
-R-L
1 4
-R#L
3 3
R-D
-#-
R-U
3 3
R-D
---
R#U
3 3
-D-
R-L
-U-
1 7
RLLLLLL



                        Sample Output 1
                        





1
0
0
0
1
0
3
2
6
3





Author:
4★erfaniaa


Editorial:
https://discuss.codechef.com/problems/ANTEATER


Tags:

               
                 Brute Force
                 
                     
                     Algorithms
                 
               
             
             



                        Difficulty Rating:
                    

2014


Date Added:
19-06-2019


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

