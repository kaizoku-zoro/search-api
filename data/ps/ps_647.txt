Chef loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.

 Chef has a positive integer N. He can apply any of the following operations as many times as he want in any order:

 Add 1 to the number N.
 Take some digit of N and replace it by any non-zero digit.
 Add any non-zero leading digit to N.
 Find the minimum number of operations that is needed for changing N to the lucky number.

Input
The first line contains a single positive integer T, the number of test cases. T test cases follow. The only line of each test case contains a positive integer N without leading zeros. 

Output
For each T test cases print one integer, the minimum number of operations that is needed for changing N to the lucky number.

Constraints

1 ≤ T ≤ 10

1 ≤ N < 10100000

                        Sample Input 1
                        





3
25
46
99



                        Sample Output 1
                        





2
1
2





Author:
2★witaliy_adm


Tester:
6★anton_lunyov


Editorial:
https://discuss.codechef.com/problems/LUCKY5


Tags:

               
                 ad-hoc
                 
                     
                     Algorithms, Constructive
                 
               
             
             



                        Difficulty Rating:
                    

1478


Date Added:
5-12-2011


Time Limit:
1.75 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM





Submit

