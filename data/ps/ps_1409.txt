Read problems statements in Hindi, Mandarin Chinese, Russian, Vietnamese and Bengali as well.
Chef wants to prepare a special dish. There is a special ingredient Chef needs for this dish, so he decided to search for it in all of Chefland. After some research, he discovered it in a secret cave. He may only enter the cave if he has a password; fortunately, a string SS, which serves as a hint for this password, is written next to the cave.
Chef knows that the secret password is a non-empty prefix of the string SS. Also, he knows that:

if a prefix occurs in SS more often as a substring, then the probability that this prefix is the secret password is higher (the probability that a chosen prefix is the secret password is an increasing function of its number of occurrences in SS)
if two prefixes have the same number of occurrences in SS, then the longer prefix has a higher probability of being the secret password

Chef wants to guess the secret password with the maximum possible probability of success. Help Chef and find the prefix for which this probability is maximum.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains a single integer NN.
The second line contains a single string SS with length NN.

Output
For each test case, print a single line containing one string — the prefix with the highest probability of being the secret password.
Constraints

1≤T≤1001≤T≤100
1≤N≤100,0001≤N≤100,000
SS contains only lowercase English letters


                        Sample Input 1
                        





3
3
abc
5
thyth
5
abcbc



                        Sample Output 1
                        





abc
th
abcbc


Explanation
Example case 1: Each prefix occurs in SS the same number of times (once) and the prefix with maximum length is "abc", so the secret password is most likely "abc".



Author:
4★shivamgor498


Editorial:
https://discuss.codechef.com/problems/SECPASS


Tags:

               
                 String, KMP Algorithm, ad-hoc, Binary Search
                 
                     
                     Data Structures, Advanced Algorithms, String Matching, Algorithms, Constructive, Searching
                 
               
             
             



                        Difficulty Rating:
                    

2007


Date Added:
14-02-2019


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

